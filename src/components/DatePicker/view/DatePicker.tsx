/* eslint-disable max-len */
import React, { useEffect } from 'react';
import dayjs from 'dayjs';
import InputMask from 'react-input-mask';

import useClickOutside from '../model/useClickOutside';
import useDatePicker from '../model/useDatePicker';
import { bemNameGenerator } from '../model/utils';
import Selector from './Selector';

import { TDatePicker } from './types';
import './DatePicker.scss';

const b = bemNameGenerator('react-date-picker-dayjs');

/**
 * @param { string } dateFormat - according to dayjs
 * You can pass children as the base element of the date picker
*/

const DatePicker = ({
  dateFormat = 'DD.MM.YYYY HH:mm',
  value,
  onChange,
  position,
  children,
  style,
  startYear,
  yearsCount,
}: TDatePicker) => {
  const { handlers, values } = useDatePicker({ value, onChange, position, startYear, yearsCount });
  const { ref } = useClickOutside(() => handlers.setIsOpen(false));

  const weekItems = values.weekNames.map(v =>
    <div className={b('cell', { type: 'week' })} key={v}>{v}</div>
  );

  const daysItems = values.days.map((v, i) => (
    <div
      className={b('cell', { active: v.active, grey: v.isAnotherMonth })}
      key={`${v.name}_${i}`}
      onClick={() => handlers.handleDayClick(v)}
    >
      {v.name}
    </div>
  ));

  useEffect(() => {
    const main = ref.current;

    if (style && main) {
      Object.entries(style).forEach(([k, v]) => {
        main.style.setProperty(k, v);
      });
    }
  // eslint-disable-next-line react-hooks/exhaustive-deps
  }, [style]);

  const withTime = dateFormat.toLowerCase().includes('hh');

  return (
    <div className={b({ open: values.isOpen })} ref={ref}>
      {children
        ? <div className={b('children')} onClick={() => handlers.setIsOpen(!values.isOpen)}>{children}</div>
        : <div className={b('input')} onClick={() => handlers.setIsOpen(!values.isOpen)}>
            <div className={b('arrow')}>
              <svg width="30" height="30" viewBox="0 0 30 30" fill="none"
                xmlns="http://www.w3.org/2000/svg">
                <path fillRule="evenodd" clipRule="evenodd" d="M10.3486 2.5C10.8303 2.5 11.2207 2.89045 11.2207 3.37209V4.82558H18.7789V3.37209C18.7789 2.89045 19.1693 2.5 19.651 2.5C20.1326 2.5 20.5231 2.89045 20.5231 3.37209V4.82613C21.197 4.82805 21.7653 4.83675 22.2457 4.876C22.8813 4.92794 23.4396 5.03766 23.9562 5.30084C24.7766 5.7189 25.4437 6.38596 25.8618 7.20644C26.1249 7.72297 26.2347 8.28127 26.2866 8.9169C26.337 9.53423 26.337 10.2966 26.337 11.2417V21.0839C26.337 22.029 26.337 22.7914 26.2866 23.4087C26.2347 24.0443 26.1249 24.6026 25.8618 25.1191C25.4437 25.9396 24.7766 26.6067 23.9562 27.0247C23.4396 27.2879 22.8813 27.3976 22.2457 27.4496C21.6284 27.5 20.866 27.5 19.9209 27.5H10.0787C9.13358 27.5 8.37125 27.5 7.75391 27.4496C7.11829 27.3976 6.55999 27.2879 6.04345 27.0247C5.22298 26.6067 4.55591 25.9396 4.13786 25.1191C3.87467 24.6026 3.76495 24.0443 3.71302 23.4087C3.66258 22.7913 3.66259 22.029 3.6626 21.0838V11.2417C3.66259 10.2966 3.66258 9.53423 3.71302 8.9169C3.76495 8.28127 3.87467 7.72297 4.13786 7.20644C4.55591 6.38596 5.22298 5.7189 6.04345 5.30084C6.55999 5.03766 7.11829 4.92794 7.75391 4.876C8.23436 4.83675 8.80263 4.82805 9.47655 4.82613V3.37209C9.47655 2.89045 9.867 2.5 10.3486 2.5ZM9.47655 6.5704C8.81437 6.57238 8.30986 6.58058 7.89595 6.6144C7.36818 6.65752 7.06497 6.7379 6.8353 6.85492C6.34301 7.10576 5.94277 7.506 5.69194 7.99828C5.57492 8.22795 5.49453 8.53117 5.45141 9.05893C5.40746 9.59687 5.40678 10.2878 5.40678 11.2791V11.8023H24.5928V11.2791C24.5928 10.2878 24.5922 9.59687 24.5482 9.05893C24.5051 8.53117 24.4247 8.22795 24.3077 7.99828C24.0568 7.506 23.6566 7.10576 23.1643 6.85492C22.9346 6.7379 22.6314 6.65752 22.1037 6.6144C21.6898 6.58058 21.1852 6.57238 20.5231 6.5704V8.02326C20.5231 8.5049 20.1326 8.89535 19.651 8.89535C19.1693 8.89535 18.7789 8.5049 18.7789 8.02326V6.56977H11.2207V8.02326C11.2207 8.5049 10.8303 8.89535 10.3486 8.89535C9.867 8.89535 9.47655 8.5049 9.47655 8.02326V6.5704ZM24.5928 13.5465H5.40678V21.0465C5.40678 22.0377 5.40746 22.7287 5.45141 23.2666C5.49453 23.7944 5.57492 24.0976 5.69194 24.3273C5.94277 24.8196 6.34301 25.2198 6.8353 25.4707C7.06497 25.5877 7.36818 25.6681 7.89595 25.7112C8.43389 25.7551 9.12486 25.7558 10.1161 25.7558H19.8835C20.8748 25.7558 21.5657 25.7551 22.1037 25.7112C22.6314 25.6681 22.9346 25.5877 23.1643 25.4707C23.6566 25.2198 24.0568 24.8196 24.3077 24.3273C24.4247 24.0976 24.5051 23.7944 24.5482 23.2666C24.5922 22.7287 24.5928 22.0377 24.5928 21.0465V13.5465Z" fill="var(--icon)"/>
                <path d="M18.4884 17.0933C18.4884 16.7677 18.4884 16.6049 18.5517 16.4805C18.6075 16.3711 18.6964 16.2822 18.8058 16.2265C18.9302 16.1631 19.093 16.1631 19.4186 16.1631H19.8837C20.2093 16.1631 20.3721 16.1631 20.4965 16.2265C20.6059 16.2822 20.6948 16.3711 20.7506 16.4805C20.8139 16.6049 20.8139 16.7677 20.8139 17.0933V17.5584C20.8139 17.884 20.8139 18.0469 20.7506 18.1712C20.6948 18.2806 20.6059 18.3696 20.4965 18.4253C20.3721 18.4887 20.2093 18.4887 19.8837 18.4887H19.4186C19.093 18.4887 18.9302 18.4887 18.8058 18.4253C18.6964 18.3696 18.6075 18.2806 18.5517 18.1712C18.4884 18.0469 18.4884 17.884 18.4884 17.5584V17.0933Z" fill="var(--icon)"/>
                <path d="M13.8372 21.7445C13.8372 21.4189 13.8372 21.2561 13.9006 21.1317C13.9563 21.0223 14.0452 20.9334 14.1546 20.8776C14.279 20.8142 14.4418 20.8142 14.7674 20.8142H15.2325C15.5582 20.8142 15.721 20.8142 15.8453 20.8776C15.9547 20.9334 16.0437 21.0223 16.0994 21.1317C16.1628 21.2561 16.1628 21.4189 16.1628 21.7445V22.2096C16.1628 22.5352 16.1628 22.698 16.0994 22.8224C16.0437 22.9318 15.9547 23.0207 15.8453 23.0765C15.721 23.1398 15.5582 23.1398 15.2325 23.1398H14.7674C14.4418 23.1398 14.279 23.1398 14.1546 23.0765C14.0452 23.0207 13.9563 22.9318 13.9006 22.8224C13.8372 22.698 13.8372 22.5352 13.8372 22.2096V21.7445Z" fill="var(--icon)"/>
                <path d="M13.8372 17.0933C13.8372 16.7677 13.8372 16.6049 13.9006 16.4805C13.9563 16.3711 14.0452 16.2822 14.1546 16.2265C14.279 16.1631 14.4418 16.1631 14.7674 16.1631H15.2325C15.5582 16.1631 15.721 16.1631 15.8453 16.2265C15.9547 16.2822 16.0437 16.3711 16.0994 16.4805C16.1628 16.6049 16.1628 16.7677 16.1628 17.0933V17.5584C16.1628 17.884 16.1628 18.0469 16.0994 18.1712C16.0437 18.2806 15.9547 18.3696 15.8453 18.4253C15.721 18.4887 15.5582 18.4887 15.2325 18.4887H14.7674C14.4418 18.4887 14.279 18.4887 14.1546 18.4253C14.0452 18.3696 13.9563 18.2806 13.9006 18.1712C13.8372 18.0469 13.8372 17.884 13.8372 17.5584V17.0933Z" fill="var(--icon)"/>
                <path d="M9.18604 21.7445C9.18604 21.4189 9.18604 21.2561 9.2494 21.1317C9.30514 21.0223 9.39409 20.9334 9.50348 20.8776C9.62785 20.8142 9.79066 20.8142 10.1163 20.8142H10.5814C10.907 20.8142 11.0698 20.8142 11.1942 20.8776C11.3036 20.9334 11.3925 21.0223 11.4482 21.1317C11.5116 21.2561 11.5116 21.4189 11.5116 21.7445V22.2096C11.5116 22.5352 11.5116 22.698 11.4482 22.8224C11.3925 22.9318 11.3036 23.0207 11.1942 23.0765C11.0698 23.1398 10.907 23.1398 10.5814 23.1398H10.1163C9.79066 23.1398 9.62785 23.1398 9.50348 23.0765C9.39409 23.0207 9.30514 22.9318 9.2494 22.8224C9.18604 22.698 9.18604 22.5352 9.18604 22.2096V21.7445Z" fill="var(--icon)"/>
                <path d="M9.18604 17.0933C9.18604 16.7677 9.18604 16.6049 9.2494 16.4805C9.30514 16.3711 9.39409 16.2822 9.50348 16.2265C9.62785 16.1631 9.79066 16.1631 10.1163 16.1631H10.5814C10.907 16.1631 11.0698 16.1631 11.1942 16.2265C11.3036 16.2822 11.3925 16.3711 11.4482 16.4805C11.5116 16.6049 11.5116 16.7677 11.5116 17.0933V17.5584C11.5116 17.884 11.5116 18.0469 11.4482 18.1712C11.3925 18.2806 11.3036 18.3696 11.1942 18.4253C11.0698 18.4887 10.907 18.4887 10.5814 18.4887H10.1163C9.79066 18.4887 9.62785 18.4887 9.50348 18.4253C9.39409 18.3696 9.30514 18.2806 9.2494 18.1712C9.18604 18.0469 9.18604 17.884 9.18604 17.5584V17.0933Z" fill="var(--icon)"/>
              </svg>
            </div>
            {value ? dayjs(value).format(dateFormat) : dateFormat}
            <div className={b('arrow', { type: 'main' })}>
              <svg width="30" height="30" viewBox="0 0 30 30" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M15.4679 18.2888L20.8073 13.1667C20.9358 13.0435 21 12.8938 21 12.7178C21 12.5418 20.9358 12.3922 20.8073 12.269L20.2018 11.6881C20.0734 11.5649 19.9174 11.5033 19.7339 11.5033C19.5505 11.4857 19.3945 11.5385 19.2661 11.6617L15 15.7541L10.7339 11.6617C10.6055 11.5385 10.4495 11.4857 10.2661 11.5033C10.0826 11.5033 9.92661 11.5649 9.79817 11.6881L9.19266 12.269C9.06422 12.3922 9 12.5418 9 12.7178C9 12.8938 9.06422 13.0435 9.19266 13.1667L14.5321 18.2888C14.6606 18.4296 14.8165 18.5 15 18.5C15.1835 18.5 15.3395 18.4296 15.4679 18.2888Z" fill="var(--icon)"/>
              </svg>
            </div>
          </div>}

      <div className={b('calendar-wrapper', { position: position ?? values.dynamicPosition })} ref={values.calendarRef}>
        <div className={b('calendar')}>
          <div className={b('calendar-header')}>
            <div
              className={b('arrow', { type: 'left' })}
              onClick={() => handlers.handleArrowClick(-1, 'year')}
            >
              <svg width="30" height="30" viewBox="0 0 30 30" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M15.4679 18.2888L20.8073 13.1667C20.9358 13.0435 21 12.8938 21 12.7178C21 12.5418 20.9358 12.3922 20.8073 12.269L20.2018 11.6881C20.0734 11.5649 19.9174 11.5033 19.7339 11.5033C19.5505 11.4857 19.3945 11.5385 19.2661 11.6617L15 15.7541L10.7339 11.6617C10.6055 11.5385 10.4495 11.4857 10.2661 11.5033C10.0826 11.5033 9.92661 11.5649 9.79817 11.6881L9.19266 12.269C9.06422 12.3922 9 12.5418 9 12.7178C9 12.8938 9.06422 13.0435 9.19266 13.1667L14.5321 18.2888C14.6606 18.4296 14.8165 18.5 15 18.5C15.1835 18.5 15.3395 18.4296 15.4679 18.2888Z" fill="var(--text)"/>
              </svg>
            </div>
            <div className={b('selector')}>
              <Selector items={values.years} onChange={handlers.handleYearSelect} style={style} />
            </div>
            <div
              className={b('arrow', { type: 'right' })}
              onClick={() => handlers.handleArrowClick(1, 'year')}
            >
              <svg width="30" height="30" viewBox="0 0 30 30" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M15.4679 18.2888L20.8073 13.1667C20.9358 13.0435 21 12.8938 21 12.7178C21 12.5418 20.9358 12.3922 20.8073 12.269L20.2018 11.6881C20.0734 11.5649 19.9174 11.5033 19.7339 11.5033C19.5505 11.4857 19.3945 11.5385 19.2661 11.6617L15 15.7541L10.7339 11.6617C10.6055 11.5385 10.4495 11.4857 10.2661 11.5033C10.0826 11.5033 9.92661 11.5649 9.79817 11.6881L9.19266 12.269C9.06422 12.3922 9 12.5418 9 12.7178C9 12.8938 9.06422 13.0435 9.19266 13.1667L14.5321 18.2888C14.6606 18.4296 14.8165 18.5 15 18.5C15.1835 18.5 15.3395 18.4296 15.4679 18.2888Z" fill="var(--text)"/>
              </svg>
            </div>
          </div>
          <div className={b('calendar-header')}>
            <div
              className={b('arrow', { type: 'left' })}
              onClick={() => handlers.handleArrowClick(-1, 'month')}
            >
              <svg width="30" height="30" viewBox="0 0 30 30" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M15.4679 18.2888L20.8073 13.1667C20.9358 13.0435 21 12.8938 21 12.7178C21 12.5418 20.9358 12.3922 20.8073 12.269L20.2018 11.6881C20.0734 11.5649 19.9174 11.5033 19.7339 11.5033C19.5505 11.4857 19.3945 11.5385 19.2661 11.6617L15 15.7541L10.7339 11.6617C10.6055 11.5385 10.4495 11.4857 10.2661 11.5033C10.0826 11.5033 9.92661 11.5649 9.79817 11.6881L9.19266 12.269C9.06422 12.3922 9 12.5418 9 12.7178C9 12.8938 9.06422 13.0435 9.19266 13.1667L14.5321 18.2888C14.6606 18.4296 14.8165 18.5 15 18.5C15.1835 18.5 15.3395 18.4296 15.4679 18.2888Z" fill="var(--text)"/>
              </svg>
            </div>
            <div className={b('selector')}>
              <Selector items={values.months} onChange={handlers.handleMonthSelect} style={style} />
            </div>
            <div
              className={b('arrow', { type: 'right' })}
              onClick={() => handlers.handleArrowClick(1, 'month')}
            >
              <svg width="30" height="30" viewBox="0 0 30 30" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M15.4679 18.2888L20.8073 13.1667C20.9358 13.0435 21 12.8938 21 12.7178C21 12.5418 20.9358 12.3922 20.8073 12.269L20.2018 11.6881C20.0734 11.5649 19.9174 11.5033 19.7339 11.5033C19.5505 11.4857 19.3945 11.5385 19.2661 11.6617L15 15.7541L10.7339 11.6617C10.6055 11.5385 10.4495 11.4857 10.2661 11.5033C10.0826 11.5033 9.92661 11.5649 9.79817 11.6881L9.19266 12.269C9.06422 12.3922 9 12.5418 9 12.7178C9 12.8938 9.06422 13.0435 9.19266 13.1667L14.5321 18.2888C14.6606 18.4296 14.8165 18.5 15 18.5C15.1835 18.5 15.3395 18.4296 15.4679 18.2888Z" fill="var(--text)"/>
              </svg>
            </div>
          </div>
          <div className={b('calendar-table')}>
            {weekItems}
            {daysItems}
          </div>
          {withTime && <div className={b('calendar-footer')}>
            <div
              className={b('arrow', { type: 'left' })}
              onClick={() => handlers.handleArrowClick(-1, 'hour')}
            >
              <svg width="30" height="30" viewBox="0 0 30 30" fill="none" xmlns="http://www.w3.org/2000/svg">
                <g id="arrow 1">
                  <g id="Group 1">
                    <path id="Vector" d="M15.4679 12.7888L20.8073 7.6667C20.9358 7.5435 21 7.3938 21 7.2178C21 7.0418 20.9358 6.8922 20.8073 6.769L20.2018 6.1881C20.0734 6.0649 19.9174 6.0033 19.7339 6.0033C19.5505 5.9857 19.3945 6.0385 19.2661 6.1617L15 10.2541L10.7339 6.1617C10.6055 6.0385 10.4495 5.9857 10.2661 6.0033C10.0826 6.0033 9.92661 6.0649 9.79817 6.1881L9.19266 6.769C9.06422 6.8922 9 7.0418 9 7.2178C9 7.3938 9.06422 7.5435 9.19266 7.6667L14.5321 12.7888C14.6606 12.9296 14.8165 13 15 13C15.1835 13 15.3395 12.9296 15.4679 12.7888Z" fill="var(--text)"/>
                    <path id="Vector_2" d="M15.4679 22.7888L20.8073 17.6667C20.9358 17.5435 21 17.3938 21 17.2178C21 17.0418 20.9358 16.8922 20.8073 16.769L20.2018 16.1881C20.0734 16.0649 19.9174 16.0033 19.7339 16.0033C19.5505 15.9857 19.3945 16.0385 19.2661 16.1617L15 20.2541L10.7339 16.1617C10.6055 16.0385 10.4495 15.9857 10.2661 16.0033C10.0826 16.0033 9.92661 16.0649 9.79817 16.1881L9.19266 16.769C9.06422 16.8922 9 17.0418 9 17.2178C9 17.3938 9.06422 17.5435 9.19266 17.6667L14.5321 22.7888C14.6606 22.9296 14.8165 23 15 23C15.1835 23 15.3395 22.9296 15.4679 22.7888Z" fill="var(--text)"/>
                  </g>
                </g>
              </svg>
            </div>
            <div
              className={b('arrow', { type: 'left' })}
              onClick={() => handlers.handleArrowClick(-1, 'minute')}
            >
              <svg width="30" height="30" viewBox="0 0 30 30" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M15.4679 18.2888L20.8073 13.1667C20.9358 13.0435 21 12.8938 21 12.7178C21 12.5418 20.9358 12.3922 20.8073 12.269L20.2018 11.6881C20.0734 11.5649 19.9174 11.5033 19.7339 11.5033C19.5505 11.4857 19.3945 11.5385 19.2661 11.6617L15 15.7541L10.7339 11.6617C10.6055 11.5385 10.4495 11.4857 10.2661 11.5033C10.0826 11.5033 9.92661 11.5649 9.79817 11.6881L9.19266 12.269C9.06422 12.3922 9 12.5418 9 12.7178C9 12.8938 9.06422 13.0435 9.19266 13.1667L14.5321 18.2888C14.6606 18.4296 14.8165 18.5 15 18.5C15.1835 18.5 15.3395 18.4296 15.4679 18.2888Z" fill="var(--text)"/>
              </svg>
            </div>
            <InputMask
              mask="99:99"
              value={values.bufferValue.format('HH:mm')}
              onChange={handlers.handleTimeChange}
              maskChar={null}
            >
              {/* @ts-ignore */}
              {(inputProps: React.InputHTMLAttributes<HTMLInputElement>) => <input className={b('time')} type="text" inputMode='numeric' pattern='\d*' {...inputProps} />}
            </InputMask>
            <div
              className={b('arrow', { type: 'right' })}
              onClick={() => handlers.handleArrowClick(1, 'minute')}
            >
              <svg width="30" height="30" viewBox="0 0 30 30" fill="none" xmlns="http://www.w3.org/2000/svg">
                <path d="M15.4679 18.2888L20.8073 13.1667C20.9358 13.0435 21 12.8938 21 12.7178C21 12.5418 20.9358 12.3922 20.8073 12.269L20.2018 11.6881C20.0734 11.5649 19.9174 11.5033 19.7339 11.5033C19.5505 11.4857 19.3945 11.5385 19.2661 11.6617L15 15.7541L10.7339 11.6617C10.6055 11.5385 10.4495 11.4857 10.2661 11.5033C10.0826 11.5033 9.92661 11.5649 9.79817 11.6881L9.19266 12.269C9.06422 12.3922 9 12.5418 9 12.7178C9 12.8938 9.06422 13.0435 9.19266 13.1667L14.5321 18.2888C14.6606 18.4296 14.8165 18.5 15 18.5C15.1835 18.5 15.3395 18.4296 15.4679 18.2888Z" fill="var(--text)"/>
              </svg>
            </div>
            <div
              className={b('arrow', { type: 'right' })}
              onClick={() => handlers.handleArrowClick(1, 'hour')}
            >
              <svg width="30" height="30" viewBox="0 0 30 30" fill="none" xmlns="http://www.w3.org/2000/svg">
                <g id="arrow 1">
                  <g id="Group 1">
                    <path id="Vector" d="M15.4679 12.7888L20.8073 7.6667C20.9358 7.5435 21 7.3938 21 7.2178C21 7.0418 20.9358 6.8922 20.8073 6.769L20.2018 6.1881C20.0734 6.0649 19.9174 6.0033 19.7339 6.0033C19.5505 5.9857 19.3945 6.0385 19.2661 6.1617L15 10.2541L10.7339 6.1617C10.6055 6.0385 10.4495 5.9857 10.2661 6.0033C10.0826 6.0033 9.92661 6.0649 9.79817 6.1881L9.19266 6.769C9.06422 6.8922 9 7.0418 9 7.2178C9 7.3938 9.06422 7.5435 9.19266 7.6667L14.5321 12.7888C14.6606 12.9296 14.8165 13 15 13C15.1835 13 15.3395 12.9296 15.4679 12.7888Z" fill="var(--text)"/>
                    <path id="Vector_2" d="M15.4679 22.7888L20.8073 17.6667C20.9358 17.5435 21 17.3938 21 17.2178C21 17.0418 20.9358 16.8922 20.8073 16.769L20.2018 16.1881C20.0734 16.0649 19.9174 16.0033 19.7339 16.0033C19.5505 15.9857 19.3945 16.0385 19.2661 16.1617L15 20.2541L10.7339 16.1617C10.6055 16.0385 10.4495 15.9857 10.2661 16.0033C10.0826 16.0033 9.92661 16.0649 9.79817 16.1881L9.19266 16.769C9.06422 16.8922 9 17.0418 9 17.2178C9 17.3938 9.06422 17.5435 9.19266 17.6667L14.5321 22.7888C14.6606 22.9296 14.8165 23 15 23C15.1835 23 15.3395 22.9296 15.4679 22.7888Z" fill="var(--text)"/>
                  </g>
                </g>
              </svg>
            </div>
          </div>}
        </div>
      </div>
    </div>
  );
};

export default DatePicker;
